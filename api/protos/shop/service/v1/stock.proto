syntax = "proto3";

package shop.service.v1;

import "gnostic/openapi/v3/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

import "pagination/v1/pagination.proto";

// 库存服务
service StockService {
  rpc DeductStock(DeductStockRequest) returns (DeductStockResponse) {
    option (gnostic.openapi.v3.operation) = {
      summary: "减少商品库存",
      description: "通过商品ID和数量减少商品库存"
    };
  }

  rpc TryDeductStock(TryDeductStockRequest) returns (TryDeductStockResponse) {
    option (gnostic.openapi.v3.operation) = {
      summary: "尝试减少商品库存",
      description: "预留商品库存，进入 Try 阶段"
    };
  }

  rpc ConfirmDeductStock(ConfirmDeductStockRequest) returns (google.protobuf.Empty) {
    option (gnostic.openapi.v3.operation) = {
      summary: "确认减少商品库存",
      description: "确认减少库存，进入 Confirm 阶段"
    };
  }

  rpc CancelDeductStock(CancelDeductStockRequest) returns (google.protobuf.Empty) {
    option (gnostic.openapi.v3.operation) = {
      summary: "取消减少商品库存",
      description: "释放预留库存，进入 Cancel 阶段"
    };
  }

  rpc RefundStock(RefundStockRequest) returns (RefundStockResponse) {
    option (gnostic.openapi.v3.operation) = {
      summary: "退款并恢复商品库存",
      description: "通过订单ID和商品ID恢复商品库存"
    };
  }
}

message Product {
  uint32 id = 1 [
    (gnostic.openapi.v3.property) = {description: "商品ID"},
    json_name = "id"
  ]; // 商品ID

  string name = 2 [
    (gnostic.openapi.v3.property) = {description: "商品名称"},
    json_name = "name"
  ]; // 商品名称

  string description = 3 [
    (gnostic.openapi.v3.property) = {description: "商品描述"},
    json_name = "description"
  ]; // 商品描述

  int32 stock = 4 [
    (gnostic.openapi.v3.property) = {description: "商品库存"},
    json_name = "stock"
  ]; // 商品库存

  double price = 5 [
    (gnostic.openapi.v3.property) = {description: "商品价格"},
    json_name = "price"
  ]; // 商品价格

  optional google.protobuf.Timestamp create_time = 200 [json_name = "createTime", (gnostic.openapi.v3.property) = {description: "创建时间"}];// 创建时间
  optional google.protobuf.Timestamp update_time = 201 [json_name = "updateTime", (gnostic.openapi.v3.property) = {description: "更新时间"}];// 更新时间
  optional google.protobuf.Timestamp delete_time = 202 [json_name = "deleteTime", (gnostic.openapi.v3.property) = {description: "删除时间"}];// 删除时间
}

message DeductStockRequest {
  uint32 product_id = 1 [
    (gnostic.openapi.v3.property) = {description: "商品ID"},
    json_name = "productId"
  ]; // 商品ID

  int32 quantity = 2 [
    (gnostic.openapi.v3.property) = {description: "减少的数量"},
    json_name = "quantity"
  ]; // 减少的数量

  string request_id = 3 [
    (gnostic.openapi.v3.property) = {description: "请求ID"},
    json_name = "requestId"
  ]; // 请求ID，用于幂等性控制
}

message DeductStockResponse {
  bool success = 1 [
    (gnostic.openapi.v3.property) = {description: "库存减少是否成功"},
    json_name = "success"
  ]; // 库存减少是否成功

  string message = 2 [
    (gnostic.openapi.v3.property) = {description: "操作结果消息"},
    json_name = "message"
  ]; // 操作结果消息
}

message TryDeductStockRequest {
  uint32 product_id = 1 [
    (gnostic.openapi.v3.property) = {description: "商品ID"},
    json_name = "productId"
  ]; // 商品ID

  int32 quantity = 2 [
    (gnostic.openapi.v3.property) = {description: "尝试减少的数量"},
    json_name = "quantity"
  ]; // 尝试减少的数量
}

message TryDeductStockResponse {
  bool success = 1 [
    (gnostic.openapi.v3.property) = {description: "尝试是否成功"},
    json_name = "success"
  ]; // 尝试是否成功

  string message = 2 [
    (gnostic.openapi.v3.property) = {description: "操作结果消息"},
    json_name = "message"
  ]; // 操作结果消息
}

message ConfirmDeductStockRequest {
  uint32 product_id = 1 [
    (gnostic.openapi.v3.property) = {description: "商品ID"},
    json_name = "productId"
  ]; // 商品ID

  int32 quantity = 2 [
    (gnostic.openapi.v3.property) = {description: "确认减少的数量"},
    json_name = "quantity"
  ]; // 确认减少的数量
}

message CancelDeductStockRequest {
  uint32 product_id = 1 [
    (gnostic.openapi.v3.property) = {description: "商品ID"},
    json_name = "productId"
  ]; // 商品ID

  int32 quantity = 2 [
    (gnostic.openapi.v3.property) = {description: "取消减少的数量"},
    json_name = "quantity"
  ]; // 取消减少的数量
}

message RefundStockRequest {
  uint32 order_id = 1 [
    (gnostic.openapi.v3.property) = {description: "订单ID"},
    json_name = "orderId"
  ]; // 订单ID

  uint32 product_id = 2 [
    (gnostic.openapi.v3.property) = {description: "商品ID"},
    json_name = "productId"
  ]; // 商品ID

  int32 quantity = 3 [
    (gnostic.openapi.v3.property) = {description: "恢复的数量"},
    json_name = "quantity"
  ]; // 恢复的数量
}
message RefundStockResponse {
  bool success = 1 [
    (gnostic.openapi.v3.property) = {description: "退款并恢复库存是否成功"},
    json_name = "success"
  ]; // 退款并恢复库存是否成功

  string message = 2 [
    (gnostic.openapi.v3.property) = {description: "操作结果消息"},
    json_name = "message"
  ]; // 操作结果消息
}